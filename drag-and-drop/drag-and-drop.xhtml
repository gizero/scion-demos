<?xml version="1.0" encoding="utf-8"?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->
<!--
This demo illustrates mixing HTML, SVG, and SCXML content in a single compound
XML document. 

It also illustrates a fairly general technique, which would
allow authoring of SVG content with inline, declarative behavioural descriptions
using SCXML: 
* the document is searched for scxml elements 
* it compiles them locally to JavaScript, and then hooks up event listeners on the parent DOM node, 
    so that DOM events are sent to the state machine for processing
* the state machine is able to manipulate the DOM directly through executable content nodes
-->

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:svg="http://www.w3.org/2000/svg">
    <head>
        <style type="text/css">
            html, body {
                height:100%;
                margin: 0;
                padding: 0;
            }
        </style>
        <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
        <script src="http://documentcloud.github.com/underscore/underscore-min.js"></script>
        <script src="https://raw.github.com/mckamey/jsonml/master/jsonml-dom.js"></script>
        <script type="text/javascript" src="http://jbeard4.github.com/SCION/builds/0.0.3/scion-min.js"></script>
        <script type="text/javascript">
            var parsepage = require('util/browser/parsePage');
            $(document).ready(parsepage);
        </script>

    </head>
    <body>
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:scion="https://github.com/jbeard4/SCION" width="100%" height="99%" >

            <rect width="100" height="100" stroke="black" fill="red" id="rectToTranslate" >
                <!-- the domEventsToConnect attribute is just some syntactic sugar provided by the scion parseOnLoad module -->
                <scxml 
                    xmlns="http://www.w3.org/2005/07/scxml"
                    version="1.0"
                    profile="ecmascript"
                    initial="idle"
                    scion:domEventsToConnect="mousedown,mouseup,mousemove">

                    <script>
                        function computeTDelta(oldEvent,newEvent){
                            //summary:computes the offset between two events; to be later used with this.translate
                            var dx = newEvent.clientX - oldEvent.clientX;
                            var dy = newEvent.clientY - oldEvent.clientY;

                            return {'dx':dx,'dy':dy};
                        }

                        function translate(rawNode,tDelta){
                            var tl = rawNode.transform.baseVal;
                            var t = tl.numberOfItems ? tl.getItem(0) : rawNode.ownerSVGElement.createSVGTransform();
                            var m = t.matrix;
                            var newM = rawNode.ownerSVGElement.createSVGMatrix().translate(tDelta.dx,tDelta.dy).multiply(m);
                            t.setMatrix(newM);
                            tl.initialize(t);
                            return newM;
                        }
                    </script>

                    <datamodel>
                        <data id="firstEvent"/>
                        <data id="eventStamp"/>
                        <data id="tDelta"/>
                    </datamodel>

                    <state id="idle">
                        <transition event="mousedown" target="dragging">
                            <assign location="firstEvent" expr="_event.data"/>
                            <assign location="eventStamp" expr="_event.data"/>
                        </transition>
                    </state>

                    <state id="dragging">
                        <transition event="mouseup" target="idle"/>

                        <transition event="mousemove" target="dragging">
                            <script>
                                //This assignment to tDelta looks like it would assign to the global object, 
                                //but will in fact be assigned to the statechart's datamodel. Internally, the
                                //script block is being evaluated inside of a JavaScript "with" statement,
                                //where the datamodel object is the clause to "with".
                                tDelta = computeTDelta(eventStamp,_event.data);

                                //The "this" object hereis the parent rect node. 
                                //This is syntactic sugar, provided by the scion interpreter's evaluationContext 
                                //parameter, and the parseOnLoad script. See util/browser/parseOnLoad for more details.
                                translate(this,tDelta);
                            </script>
                            <assign location="eventStamp" expr="_event.data"/>
                        </transition>
                    </state>

                </scxml>
            </rect>
        </svg>
    </body>
</html>


